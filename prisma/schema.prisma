// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SFBUser {
  id              String            @id @default(uuid())
  nome            String
  email           String            @unique
  created_at      DateTime          @default(now())
  password_hash   String
  tipo            Role              @default(MEMBER)
  provider        String            @default("Credentials")
  img_url         String? 
  sfbTodo         SFBTodo[]
  sfbCartao       SFBCartao[]
  sfbConta        SFBConta[]
  sfbkanbanColumn SFBkanbanColumn[]

  @@map("sfb_users")
}

enum Role {
  ADMIN
  MEMBER
}

model SFBTodo {
  id          String   @id @default(uuid())
  text        String
  isCompleted Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  sfbUser    SFBUser @relation(fields: [sfbUser_id], references: [id])
  sfbUser_id String

  @@map("sfb_todo")
}

model SFBCartao {
  id              String    @id @default(uuid())
  cartao          String
  valor           Float
  data_vencimento DateTime
  data_pagamento  DateTime?
  limite          Float
  limite_usado    Float
  created_at      DateTime  @default(now())
  updated_at      DateTime  @default(now())
  sfbUser         SFBUser   @relation(fields: [sfbUser_id], references: [id])
  sfbUser_id      String

  @@map("sfb_cartao")
}

model SFBConta {
  id              String    @id @default(uuid())
  conta           String
  valor           Float
  data_vencimento DateTime
  data_pagamento  DateTime?
  created_at      DateTime  @default(now())
  updated_at      DateTime  @default(now())
  sfbUser         SFBUser   @relation(fields: [sfbUser_id], references: [id])
  sfbUser_id      String

  @@map("sfb_conta")
}

model SFBkanbanColumn {
  id            String          @id @default(uuid())
  index         Int
  title         String
  created_at    DateTime        @default(now())
  updated_at    DateTime        @default(now())
  sfbUser       SFBUser         @relation(fields: [sfbUser_id], references: [id])
  sfbUser_id    String
  sfbkanbanTask SFBkanbanTask[]

  @@map("sfb_kanban_column")
}

model SFBkanbanTask {
  id              String          @id @default(uuid())
  index           Int
  title           String
  description     String?
  created_at      DateTime        @default(now())
  updated_at      DateTime        @default(now())
  sfbkanbanColumn SFBkanbanColumn @relation(fields: [status], references: [id])
  status          String

  @@map("sfb_kanban_task")
}

model SFAUser {
  id              String    @id @default(uuid())
  nome            String
  email           String    @unique
  password_hash   String
  administrador   Boolean   @default(false)
  data_nascimento DateTime?
  img_url         String? 
  created_at      DateTime  @default(now())
  provider        String    @default("Credentials")
  sfaTodo         SFATodo[]

  @@map("sfa_users")
}

model SFATodo {
  id          String   @id @default(uuid())
  text        String
  isCompleted Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
  sfaUser     SFAUser  @relation(fields: [sfaUser_id], references: [id])
  sfaUser_id  String

  @@map("sfa_todo")
}

model SFAAtleta {
  id              String   @id @default(uuid())
  cpf             String
  nome            String
  email           String   @unique
  ativo           Boolean
  data_nascimento DateTime
  data_inicio     DateTime
  setor           String?
  posicao         String?
  numero          Int?
  altura          Float?
  pesso           Float?
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())

  @@map("sfa_atleta")
}

model SFAMovimentacao {
  id              String    @id @default(uuid())
  nome            String
  descricao       String?
  tipo            String
  valor           Float?
  data_vencimento DateTime?
  data_pagamento  DateTime?
  created_at      DateTime  @default(now())
  updated_at      DateTime  @default(now())

  @@map("sfa_movimentacao")
}

model SFACaixa {
  id                  String    @id @default(uuid())
  valor               Float?
  data_mes_referencia DateTime?
  created_at          DateTime  @default(now())
  updated_at          DateTime  @default(now())

  @@map("sfa_caixa")
}

model CSExpenses {
  id          String   @id @default(uuid())
  title       String
  description String?
  date        DateTime
  amount      Decimal  @db.Decimal(10, 2)
  paymentType Int
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  @@map("cs_expenses")
}
